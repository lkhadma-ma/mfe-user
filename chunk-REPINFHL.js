import{a as w,b as g,c as i}from"./chunk-2VMXMS7J.js";import{runInInjectionContext as H}from"@angular/core";var E="__NATIVE_FEDERATION__",I=globalThis;I[E]??={externals:new Map,remoteNamesToRemote:new Map,baseUrlToRemoteNames:new Map};var f=I[E],N=f.externals;function R(e){return`${e.packageName}@${e.version}`}function k(e){let t=R(e);return N.get(t)}function F(e,t){let o=R(e);N.set(o,t)}var b=f.remoteNamesToRemote,d=f.baseUrlToRemoteNames;function j(e,t){b.set(e,t),d.set(t.baseUrl,e)}function P(e){return d.get(e)}function v(e){return d.has(e)}function S(e){return b.get(e)}function O(e){document.head.appendChild(Object.assign(document.createElement("script"),{type:"importmap-shim",innerHTML:JSON.stringify(e)}))}function p(e){let t=e.split("/");return t.pop(),t.join("/")}function l(e,t){for(;e.endsWith("/");)e=e.substring(0,e.length-1);return t.startsWith("./")&&(t=t.substring(2,t.length)),`${e}/${t}`}var x=(function(e){return e.COMPLETED="federation-rebuild-complete",e.ERROR="federation-rebuild-error",e})(x||{});function $(e){let t=new EventSource(e);t.onmessage=function(o){JSON.parse(o.data).type===x.COMPLETED&&(console.log("[Federation] Rebuild completed, reloading..."),window.location.reload())},t.onerror=function(o){console.warn("[Federation] SSE connection error:",o)}}function _(e,t){return i(this,null,function*(){let o=p(e),n=yield C(e);t||(t=n.name),n.buildNotificationsEndpoint&&$(o+n.buildNotificationsEndpoint);let r=A(n,t,o);return j(t,g(w({},n),{baseUrl:o})),r})}function A(e,t,o){let n=D(e,t,o),r=U(e,o);return{imports:n,scopes:r}}function C(e){return i(this,null,function*(){return yield fetch(e).then(o=>o.json())})}function U(e,t){let o={},n={};for(let r of e.shared){let s=k(r)??l(t,r.outFileName);F(r,s),n[r.packageName]=s}return o[t+"/"]=n,o}function D(e,t,o){let n={};for(let r of e.exposes){let s=l(t,r.key),a=l(o,r.outFileName);n[s]=a}return n}function T(e,t){return i(this,null,function*(){let o=W(e,t);yield V(o);let n=K(o),r=S(n),s=o.fallback,a=r?"":"unknown remote "+n;if(!r&&!s)throw new Error(a);if(!r)return y(a),Promise.resolve(s);let c=r.exposes.find(m=>m.key===o.exposedModule),h=c?"":`Unknown exposed module ${o.exposedModule} in remote ${n}`;if(!c&&!s)throw new Error(h);if(!c)return y(h),Promise.resolve(s);let M=l(r.baseUrl,c.outFileName);try{return z(M)}catch(m){if(s)return console.error("error loading remote module",m),s;throw m}})}function z(e){return typeof importShim<"u"?importShim(e):import(e)}function K(e){let t;if(e.remoteName)t=e.remoteName;else if(e.remoteEntry){let o=p(e.remoteEntry);t=P(o)}else throw new Error("unexpcted arguments: Please pass remoteName or remoteEntry");if(!t)throw new Error("unknown remoteName "+t);return t}function V(e){return i(this,null,function*(){if(e.remoteEntry&&!v(p(e.remoteEntry))){let t=yield _(e.remoteEntry);O(t)}})}function W(e,t){let o;if(typeof e=="string"&&t)o={remoteName:e,exposedModule:t};else if(typeof e=="object"&&!t)o=e;else throw new Error("unexpected arguments: please pass options or a remoteName/exposedModule-pair");return o}function y(e){typeof window<"u"&&console.error(e)}import*as u from"@angular/core";var Y=(()=>{class e{injector;remote;readyPromise;constructor(o){this.injector=o}initRemote(){return this.readyPromise||(this.readyPromise=i(this,null,function*(){let o=yield T({remoteName:"auth",exposedModule:"./AuthService"});return this.remote=H(this.injector,()=>new o.AuthService),this.remote})),this.readyPromise}authorizationHeader(o=200,n=10){return i(this,null,function*(){let r=yield this.initRemote(),s,a=0;do{if(s=yield r.authorizationHeader(),s)break;if(a++,a>=n)throw new Error("Auth header not ready after max retries");yield new Promise(c=>setTimeout(c,o))}while(!s);return s})}getUser$(){return i(this,null,function*(){return(yield this.initRemote()).user$})}logout(){return i(this,null,function*(){return(yield this.initRemote()).logout()})}static \u0275fac=function(n){return new(n||e)(u.\u0275\u0275inject(u.EnvironmentInjector))};static \u0275prov=u.\u0275\u0275defineInjectable({token:e,factory:e.\u0275fac,providedIn:"root"})}return e})();export{T as a,Y as b};
